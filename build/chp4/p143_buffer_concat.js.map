{"version":3,"sources":["../../chp4/p143_buffer_concat.js"],"names":[],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,IAAI,gBAAgB,yBAAG,aAAvB;;;;AAIA,IAAI,KAAK,aAAG,gBAAH,CAAoB,SAApB,EAA+B,EAAC,eAAe,CAAhB,EAA/B,CAAT;AACA,GAAG,WAAH,CAAe,MAAf,E;AACA,IAAI,OAAO,EAAX;AACA,GAAG,EAAH,CAAM,MAAN,EAAc,UAAC,KAAD,EAAW;AACrB,YAAQ,KAAR;AACH,CAFD;;AAIA,GAAG,EAAH,CAAM,KAAN,EAAa,YAAM;AACf,YAAQ,GAAR,CAAY,CAAZ;AACA,YAAQ,GAAR,CAAY,IAAZ;AACH,CAHD;;;AAMA,IAAI,UAAU,IAAI,aAAJ,CAAkB,MAAlB,CAAd;AACA,IAAI,OAAO,IAAI,MAAJ,CAAW,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,CAAX,CAAX;AACA,QAAQ,GAAR,CAAY,QAAQ,KAAR,CAAc,IAAd,CAAZ;AACA,IAAI,OAAO,IAAI,MAAJ,CAAW,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,CAAX,CAAX;AACA,QAAQ,GAAR,CAAY,QAAQ,KAAR,CAAc,IAAd,CAAZ;;;AAGA,IAAI,SAAS,EAAb;AACA,IAAI,OAAO,CAAX;AACA,IAAI,MAAM,aAAG,gBAAH,CAAoB,SAApB,EAA+B,EAAC,eAAe,CAAhB,EAA/B,CAAV;AACA,IAAI,EAAJ,CAAO,MAAP,EAAe,UAAC,KAAD,EAAW;AACtB,WAAO,IAAP,CAAY,KAAZ;AACA,YAAQ,MAAM,MAAd;AACH,CAHD;;AAKA,IAAI,EAAJ,CAAO,KAAP,EAAc,YAAM;AAChB,QAAI,SAAS,OAAO,MAAP,CAAc,MAAd,EAAsB,IAAtB,CAAb;AACA,YAAQ,GAAR,CAAY,OAAO,QAAP,EAAZ;AACH,CAHD","file":"p143_buffer_concat.js","sourcesContent":["import fs from 'fs'\nimport sd from 'string_decoder'\n\nlet StringDecoder = sd.StringDecoder;\n\n// 正确处理字符串\n\nlet rs = fs.createReadStream('test.md', {highWaterMark: 4});\nrs.setEncoding('utf8'); // 关键步骤, 这样输出中文就不会因为buffer大小问题而产生乱码了\nlet data = '';\nrs.on('data', (chunk) => {\n    data += chunk;\n});\n\nrs.on('end', () => {\n    console.log(1);\n    console.log(data);\n});\n\n// decoder处理字符串\nlet decoder = new StringDecoder('utf8');\nlet buf1 = new Buffer([0xE5, 0xBA, 0x8A, 0xE5, 0x89, 0x8D, 0xE6, 0x98, 0x8E, 0xE6, 0x9C]);\nconsole.log(decoder.write(buf1));\nlet buf2 = new Buffer([0x88, 0xE5, 0x85, 0x89, 0xEF, 0xBC, 0x8C, 0xE7, 0x96, 0x91, 0xE6]);\nconsole.log(decoder.write(buf2));\n\n// 正确拼接Buffer\nlet chunks = [];\nlet size = 0;\nlet rs2 = fs.createReadStream('test.md', {highWaterMark: 4});\nrs2.on('data', (chunk) => {\n    chunks.push(chunk);\n    size += chunk.length;\n});\n\nrs2.on('end', () => {\n    let buffer = Buffer.concat(chunks, size);\n    console.log(buffer.toString());\n});\n\n\n"]}