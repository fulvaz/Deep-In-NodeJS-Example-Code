{"version":3,"sources":["../../chp4/p87_Promise_multi.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;;;;;;;;;;;;;;;IAEM,O;;;AACF,uBAAc;AAAA;;AAAA;AAEb;;;;6BAEI,gB,EAAkB,Y,EAAc,e,EAAiB;AAClD,gBAAI,OAAO,gBAAP,KAA4B,UAAhC,EAA4C;AACxC,qBAAK,IAAL,CAAU,SAAV,EAAqB,gBAArB;AACH;AACD,gBAAI,OAAQ,YAAR,KAAyB,UAA7B,EAAyC;AACrC,qBAAK,IAAL,CAAU,OAAV,EAAmB,YAAnB;AACH;AACD,gBAAI,OAAO,eAAP,KAA2B,UAA/B,EAA2C;AACvC,qBAAK,EAAL,CAAQ,UAAR,EAAoB,eAApB;AACH;;AAED,mBAAO,IAAP;AACH;;;;EAjBiB,iBAAO,Y;;IAoBvB,K;AACF,qBAAc;AAAA;;AACV,aAAK,OAAL,GAAe,IAAI,OAAJ,EAAf;AACH;;;;2CAEkB;AACf,gBAAI,OAAO,IAAX;AACA,mBAAO,UAAS,KAAT,EAAgB,KAAhB,EAAuB;AAC1B,oBAAI,KAAJ,EAAW;AACP,yBAAK,MAAL,CAAY,KAAZ;AACH,iBAFD,MAEO,IAAI,UAAU,MAAV,GAAmB,CAAvB,EAA0B;AAC7B,yBAAK,OAAL,CAAa,GAAG,KAAH,CAAS,IAAT,CAAc,SAAd,EAAyB,CAAzB,CAAb;AACH,iBAFM,MAEA;AACH,yBAAK,OAAL,CAAa,KAAb;AACH;AACJ,aARD;AASH;;;+BAEM,K,EAAO;AACV,iBAAK,OAAL,CAAa,IAAb,CAAkB,OAAlB,EAA2B,KAA3B;AACH;;;gCAEO,K,EAAO;AACX,iBAAK,OAAL,CAAa,IAAb,CAAkB,SAAlB,EAA6B,KAA7B;AACH;;;;;;;;4BAKG,Q,EAAU;AACV,gBAAI,QAAQ,SAAS,MAArB;AACA,gBAAI,OAAO,IAAX;AACA,gBAAI,UAAU,EAAd;AACA,qBAAS,OAAT,CAAiB,UAAC,OAAD,EAAU,CAAV,EAAgB;AAC9B,wBAAQ,IAAR,CAAa,UAAC,IAAD,EAAU;AACnB;AACA,4BAAQ,CAAR,IAAa,IAAb;AACA,wBAAI,UAAU,CAAd,EAAiB;AACb,6BAAK,OAAL,CAAa,OAAb;AACH;AACJ,iBAND,EAMG,UAAC,GAAD,EAAS;AACR,yBAAK,MAAL,CAAY,GAAZ;AACH,iBARD;AASF,aAVD;AAWA,mBAAO,KAAK,OAAZ;AACH;;;;;;;;;AAIL,IAAI,WAAW,SAAX,QAAW,CAAS,IAAT,EAAe,QAAf,EAAyB;AACpC,QAAI,WAAW,IAAI,KAAJ,EAAf;AACA,iBAAG,QAAH,CAAY,IAAZ,EAAkB,QAAlB,EAA4B,SAAS,gBAAT,EAA5B,E;AACA,WAAO,SAAS,OAAhB;AACH,CAJD;;AAMA,IAAI,WAAW,SAAS,eAAT,EAA0B,MAA1B,CAAf;AACA,IAAI,WAAW,SAAS,gBAAT,EAA2B,MAA3B,CAAf;AACA,IAAI,WAAW,IAAI,KAAJ,EAAf;AACA,SAAS,GAAT,CAAa,CAAC,QAAD,EAAW,QAAX,CAAb,EAAmC,IAAnC,CAAwC,UAAC,MAAD,EAAY;AAChD,YAAQ,GAAR,CAAY,MAAZ;AACH,CAFD,EAEG,UAAC,GAAD,EAAS;AACR,YAAQ,GAAR,CAAY,GAAZ;AACH,CAJD","file":"p87_Promise_multi.js","sourcesContent":["/**\n * Created by fulvaz on 16/6/25.\n * Promise中的多异步协助\n */\nimport fs from 'fs'\nimport events from 'events'\n\nclass Promise extends events.EventEmitter {\n    constructor() {\n        super();\n    }\n\n    then(fulfilledHandler, errorHandler, progressHandler) {\n        if (typeof fulfilledHandler === 'function') {\n            this.once('success', fulfilledHandler);\n        }\n        if (typeof  errorHandler === 'function') {\n            this.once('error', errorHandler);\n        }\n        if (typeof progressHandler === 'function') {\n            this.on('progress', progressHandler);\n        }\n\n        return this;\n    }\n}\n\nclass Defer {\n    constructor() {\n        this.promise = new Promise();\n    }\n\n    makeNodeResolver() {\n        let self = this;\n        return function(error, value) {\n            if (error) {\n                self.reject(error);\n            } else if (arguments.length > 2) {\n                self.resolve([].slice.call(arguments, 1));\n            } else {\n                self.resolve(value);\n            }\n        }\n    }\n\n    reject(error) {\n        this.promise.emit('error', error);\n    }\n\n    resolve(value) {\n        this.promise.emit('success', value);\n    }\n\n    /**\n     * promise中的promise\n     * */\n    all(promises) {\n        let count = promises.length;\n        let that = this;\n        let results = [];\n        promises.forEach((promise, i) => {\n           promise.then((data) => {\n               count--;\n               results[i] = data;\n               if (count === 0) {\n                   that.resolve(results);\n               }\n           }, (err) => {\n               that.reject(err);\n           });\n        });\n        return this.promise;\n    }\n}\n\n// usage\nlet readFile = function(file, encoding) {\n    let deffered = new Defer();\n    fs.readFile(file, encoding, deffered.makeNodeResolver()); // 应该设置为静态方法\n    return deffered.promise;\n};\n\nlet promise1 = readFile('./p76_http.js', 'utf8');\nlet promise2 = readFile('./p77_event.js', 'utf8');\nlet deferred = new Defer();\ndeferred.all([promise1, promise2]).then((result) => {\n    console.log(result);\n}, (err) => {\n    console.log(err);\n});\n"]}